@inject SettingService SettingService
@inject IJSRuntime JSRuntime

<MudItem xs="6">
    <MudPaper Elevation="4" Outlined="true">
        <MudTable Items="@Team.Players" RowClassFunc="@HighlightPlayerClassFunc" SortLabel="Sort By" Class="player-table" Striped="true" Dense="true" CustomHeader="true" AllowUnsorted="false">
            <ToolBarContent>
                <MudText Typo="Typo.h6">@Team.Abbreviation</MudText>
                <MudSpacer />
                @if (!SettingService.Settings.ShowCopyNamesOnlyWhenClanMatches || SettingService.Settings.ClanAbbreviation == Team.Abbreviation)
                {
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" OnClick="CopyNamesAsync">Kopieer namen</MudButton>
                }
            </ToolBarContent>
            <ColGroup>
                <col style="width: 50px" />
                <col />
                <col />
                <col />
                <col />
                <col />
                <col />
                <col />
                <col />
                <col />
                <col />
                <col />
                <col />
                <col />
            </ColGroup>
            <HeaderContent>
                <MudTHeadRow Class="header-centered">
                    <MudTh colspan="3" Class="sticky-left"></MudTh>
                    <MudTh colspan="3">Prestatie</MudTh>
                    <MudTh colspan="3">Schade</MudTh>
                    <MudTh colspan="3">Schoten</MudTh>
                    <MudTh colspan="1">Overig</MudTh>
                </MudTHeadRow>
                <MudTHeadRow>
                    <MudTh Class="sticky-left" Style="text-align: center">#</MudTh>
                    <MudTh Class="sticky-left name"><MudTableSortLabel SortBy="new Func<Player, object>(x=>x.DisplayName)">Naam</MudTableSortLabel></MudTh>
                    <MudTh Class="sticky-left vehicle"><MudTableSortLabel SortBy="new Func<Player, object>(x=>x.Vehicle)">Tank</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel InitialDirection="SortDirection.Descending" SortBy="new Func<Player, object>(x=>x.ExperienceEarned)">XP</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<Player, object>(x=>x.CreditsEarned)">Credits</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<Player, object>(x=>x.Kills)">Kills</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<Player, object>(x=>x.DamageDealt)">Gedaan</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<Player, object>(x=>x.DamageBlocked)">Geblokt</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<Player, object>(x=>x.DamageReceived)">Ontvangen</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<Player, object>(x=>x.Shots)">Gelost</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<Player, object>(x=>x.DirectHits)">Geraakt</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<Player, object>(x=>x.Piercings)">Gepierced</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<Player, object>(x=>x.Health)">HP</MudTableSortLabel></MudTh>
                </MudTHeadRow>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Number" Class="sticky-left" Style="text-align: center">@context.Number</MudTd>
                <MudTd DataLabel="Name" Class="no-break sticky-left name">
                    <i class="fa-solid fa-skull mr-2 @(context.DeathReason != -1 ? string.Empty : "invisible")"></i>
                    @context.DisplayName
                </MudTd>
                <MudTd DataLabel="Vehicle" Class="no-break sticky-left vehicle">@context.Vehicle</MudTd>
                <MudTd DataLabel="ExperienceEarned">@context.ExperienceEarned</MudTd>
                <MudTd DataLabel="CreditsEarned">@context.CreditsEarned</MudTd>
                <MudTd DataLabel="Kills">@context.Kills</MudTd>
                <MudTd DataLabel="DamageDealt">@context.DamageDealt</MudTd>
                <MudTd DataLabel="DamageBlocked">@context.DamageBlocked</MudTd>
                <MudTd DataLabel="DamageReceived">@context.DamageReceived</MudTd>
                <MudTd DataLabel="Shots">@context.Shots</MudTd>
                <MudTd DataLabel="DirectHits">@context.DirectHits</MudTd>
                <MudTd DataLabel="Piercings">@context.Piercings</MudTd>
                <MudTd DataLabel="Health">@context.Health</MudTd>
            </RowTemplate>
        </MudTable>
    </MudPaper>
</MudItem>


@code {
    [Parameter]
    public Team Team { get; set; }

    [Parameter]
    public string Map { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("keepElementOffset", $".mud-table.player-table .sticky-left.name");
            await JSRuntime.InvokeVoidAsync("keepElementOffset", $".mud-table.player-table .sticky-left.vehicle");
        }
    }

    private string HighlightPlayerClassFunc(Player player, int rowNumber)
    {
        if (player.Name != null && player.Name?.ToLower() == SettingService.Settings.PlayerName?.ToLower())
            return "highlight";

        if (player.IsTeamKiller.GetValueOrDefault())
            return "teamkiller";


        return string.Empty;
    }

    private async Task CopyNamesAsync()
    {
        var names = Team.Players.Where(x => x.Name != null).OrderByDescending(x => x.ExperienceEarned).Select(x => x.Name).ToList();
        var suffix = Team.Number == 1 ? "I" : "II";
        names.Insert(0, $"{Map} {suffix}");
        await Clipboard.SetTextAsync(string.Join(Environment.NewLine, names));
    }
}
